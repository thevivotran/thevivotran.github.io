/*!
  * Bootstrap v4.5.0 (https://getbootstrap.com/)
  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
 !function(t, e) {
  "object" == typeof exports && "undefined" != typeof module ? e(exports, require("jquery")) : "function" == typeof define && define.amd ? define(["exports", "jquery"], e) : e((t = t || self).bootstrap = {}, t.jQuery)
}(this, (function(t, e) {
  "use strict";
  function n(t, e) {
      for (var n = 0; n < e.length; n++) {
          var i = e[n];
          i.enumerable = i.enumerable || !1,
          i.configurable = !0,
          "value"in i && (i.writable = !0),
          Object.defineProperty(t, i.key, i)
      }
  }
  function i(t, e, i) {
      return e && n(t.prototype, e),
      i && n(t, i),
      t
  }
  function o(t, e, n) {
      return e in t ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0
      }) : t[e] = n,
      t
  }
  function r(t, e) {
      var n = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var i = Object.getOwnPropertySymbols(t);
          e && (i = i.filter((function(e) {
          }
          ))),
          n.push.apply(n, i)
      }
      return n
  }
  function s(t) {
      for (var e = 1; e < arguments.length; e++) {
          var n = null != arguments[e] ? arguments[e] : {};
          e % 2 ? r(Object(n), !0).forEach((function(e) {
              o(t, e, n[e])
          }
          )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : r(Object(n)).forEach((function(e) {
          }
          ))
      }
      return t
  }
  e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
  function a(t) {
  }
  var l = {
      TRANSITION_END: "bsTransitionEnd",
      getUID: function(t) {
      },
      getSelectorFromElement: function(t) {
      },
      getTransitionDurationFromElement: function(t) {
      },
      reflow: function(t) {
      },
      triggerTransitionEnd: function(t) {
      },
      supportsTransitionEnd: function() {
      },
      isElement: function(t) {
      },
      typeCheckConfig: function(t, e, n) {
      },
      findShadowRoot: function(t) {
      },
      jQueryDetection: function() {
          if ("undefined" == typeof e)
              throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");
          var t = e.fn.jquery.split(" ")[0].split(".");
          if (t[0] < 2 && t[1] < 9 || 1 === t[0] && 9 === t[1] && t[2] < 1 || t[0] >= 4)
              throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")
      }
  };
  l.jQueryDetection(),
  e.fn.emulateTransitionEnd = a,
  e.event.special[l.TRANSITION_END] = {
      bindType: "transitionend",
      delegateType: "transitionend",
      handle: function(t) {
      }
  };
  var c = "alert"
    , u = e.fn[c]
    , h = function() {
      function t(t) {
          this._element = t
      }
      var n = t.prototype;
      return n.close = function(t) {
      }
      ,
      n.dispose = function() {
      }
      ,
      n._getRootElement = function(t) {
      }
      ,
      n._triggerCloseEvent = function(t) {
      }
      ,
      n._removeElement = function(t) {
      }
      ,
      n._destroyElement = function(t) {
      }
      ,
      t._jQueryInterface = function(n) {
      }
      ,
      t._handleDismiss = function(t) {
          return function(e) {
          }
      }
      ,
      i(t, null, [{
          key: "VERSION",
          get: function() {
          }
      }]),
      t
  }();
  e(document).on("click.bs.alert.data-api", '[data-dismiss="alert"]', h._handleDismiss(new h)),
  e.fn[c] = h._jQueryInterface,
  e.fn[c].Constructor = h,
  e.fn[c].noConflict = function() {
  }
  ;
  var f = e.fn.button
    , d = function() {
      function t(t) {
      }
      var n = t.prototype;
      return n.toggle = function() {
      }
      ,
      n.dispose = function() {
      }
      ,
      t._jQueryInterface = function(n) {
      }
      ,
      i(t, null, [{
          key: "VERSION",
          get: function() {
          }
      }]),
      t
  }();
  e(document).on("click.bs.button.data-api", '[data-toggle^="button"]', (function(t) {
  }
  )).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', (function(t) {
  }
  )),
  e(window).on("load.bs.button.data-api", (function() {
      for (var t = [].slice.call(document.querySelectorAll('[data-toggle="buttons"] .btn')), e = 0, n = t.length; e < n; e++) {
          var i = t[e]
            , o = i.querySelector('input:not([type="hidden"])');
          o.checked || o.hasAttribute("checked") ? i.classList.add("active") : i.classList.remove("active")
      }
      for (var r = 0, s = (t = [].slice.call(document.querySelectorAll('[data-toggle="button"]'))).length; r < s; r++) {
          var a = t[r];
          "true" === a.getAttribute("aria-pressed") ? a.classList.add("active") : a.classList.remove("active")
      }
  }
  )),
  e.fn.button = d._jQueryInterface,
  e.fn.button.Constructor = d,
  e.fn.button.noConflict = function() {
  }
  ;
  var p = "carousel"
    , m = ".bs.carousel"
    , g = e.fn[p]
    , v = {
      interval: 5e3,
      keyboard: !0,
      slide: !1,
      pause: "hover",
      wrap: !0,
      touch: !0
  }
    , _ = {
      interval: "(number|boolean)",
      keyboard: "boolean",
      slide: "(boolean|string)",
      pause: "(string|boolean)",
      wrap: "boolean",
      touch: "boolean"
  }
    , b = {
      TOUCH: "touch",
      PEN: "pen"
  }
    , y = function() {
      function t(t, e) {
      }
      var n = t.prototype;
      return n.next = function() {
      }
      ,
      n.nextWhenVisible = function() {
      }
      ,
      n.prev = function() {
      }
      ,
      n.pause = function(t) {
      }
      ,
      n.cycle = function(t) {
      }
      ,
      n.to = function(t) {
      }
      ,
      n.dispose = function() {
      }
      ,
      n._getConfig = function(t) {
      }
      ,
      n._handleSwipe = function() {
      }
      ,
      n._addEventListeners = function() {
      }
      ,
      n._addTouchEventListeners = function() {
      }
      ,
      n._keydown = function(t) {
      }
      ,
      n._getItemIndex = function(t) {
      }
      ,
      n._getItemByDirection = function(t, e) {
      }
      ,
      n._triggerSlideEvent = function(t, n) {
      }
      ,
      n._setActiveIndicatorElement = function(t) {
      }
      ,
      n._slide = function(t, n) {
      }
      ,
      t._jQueryInterface = function(n) {
      }
      ,
      t._dataApiClickHandler = function(n) {
      }
      ,
      i(t, null, [{
          key: "VERSION",
          get: function() {
          }
      }, {
          key: "Default",
          get: function() {
          }
      }]),
      t
  }();
  e(document).on("click.bs.carousel.data-api", "[data-slide], [data-slide-to]", y._dataApiClickHandler),
  e(window).on("load.bs.carousel.data-api", (function() {
      for (var t = [].slice.call(document.querySelectorAll('[data-ride="carousel"]')), n = 0, i = t.length; n < i; n++) {
          var o = e(t[n]);
          y._jQueryInterface.call(o, o.data())
      }
  }
  )),
  e.fn[p] = y._jQueryInterface,
  e.fn[p].Constructor = y,
  e.fn[p].noConflict = function() {
  }
  ;
  var w = "collapse"
    , E = e.fn[w]
    , T = {
      toggle: !0,
      parent: ""
  }
    , C = {
      toggle: "boolean",
      parent: "(string|element)"
  }
    , S = function() {
      function t(t, e) {
      }
      var n = t.prototype;
      return n.toggle = function() {
      }
      ,
      n.show = function() {
      }
      ,
      n.hide = function() {
      }
      ,
      n.setTransitioning = function(t) {
      }
      ,
      n.dispose = function() {
      }
      ,
      n._getConfig = function(t) {
      }
      ,
      n._getDimension = function() {
      }
      ,
      n._getParent = function() {
      }
      ,
      n._addAriaAndCollapsedClass = function(t, n) {
      }
      ,
      t._getTargetFromElement = function(t) {
      }
      ,
      t._jQueryInterface = function(n) {
      }
      ,
      i(t, null, [{
          key: "VERSION",
          get: function() {
          }
      }, {
          key: "Default",
          get: function() {
          }
      }]),
      t
  }();
  e(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', (function(t) {
  }
  )),
  e.fn[w] = S._jQueryInterface,
  e.fn[w].Constructor = S,
  e.fn[w].noConflict = function() {
  }
  ;
  var D = "undefined" != typeof window && "undefined" != typeof document && "undefined" != typeof navigator
    , k = function() {
      for (var t = ["Edge", "Trident", "Firefox"], e = 0; e < t.length; e += 1)
          if (D && navigator.userAgent.indexOf(t[e]) >= 0)
              return 1;
      return 0
  }();
  var N = D && window.Promise ? function(t) {
  }
  : function(t) {
  }
  ;
  function O(t) {
  }
  function A(t, e) {
  }
  function I(t) {
  }
  function x(t) {
  }
  function j(t) {
  }
  var L = D && !(!window.MSInputMethodContext || !document.documentMode)
    , P = D && /MSIE 10/.test(navigator.userAgent);
  function F(t) {
  }
  function R(t) {
  }
  function M(t) {
  }
  function B(t, e) {
  }
  function q(t) {
  }
  function H(t, e) {
  }
  function Q(t, e) {
  }
  function W(t, e, n, i) {
  }
  function U(t) {
  }
  var V = function(t, e) {
  }
    , Y = function() {
      function t(t, e) {
          for (var n = 0; n < e.length; n++) {
              var i = e[n];
              i.enumerable = i.enumerable || !1,
              i.configurable = !0,
              "value"in i && (i.writable = !0),
              Object.defineProperty(t, i.key, i)
          }
      }
      return function(e, n, i) {
          return n && t(e.prototype, n),
          i && t(e, i),
          e
      }
  }()
    , z = function(t, e, n) {
  }
    , X = Object.assign || function(t) {
  }
  ;
  function K(t) {
  }
  function G(t) {
  }
  function $(t, e) {
  }
  function J(t) {
  }
  function Z(t) {
  }
  function tt(t) {
  }
  function et(t, e, n, i) {
  }
  function nt(t) {
  }
  function it(t, e, n, i, o) {
  }
  function ot(t, e, n) {
  }
  function rt(t) {
  }
  function st(t) {
  }
  function at(t, e, n) {
  }
  function lt(t, e) {
  }
  function ct(t, e, n) {
  }
  function ut() {
  }
  function ht(t, e) {
  }
  function ft(t) {
  }
  function dt() {
  }
  function pt(t) {
  }
  function mt(t, e, n, i) {
  }
  function gt() {
  }
  function vt() {
  }
  function _t(t) {
  }
  function bt(t, e) {
  }
  var yt = D && /Firefox/i.test(navigator.userAgent);
  function wt(t, e, n) {
  }
  var Et = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"]
    , Tt = Et.slice(3);
  function Ct(t) {
  }
  var St = "flip"
    , Dt = "clockwise"
    , kt = "counterclockwise";
  function Nt(t, e, n, i) {
  }
  var Ot = {
      placement: "bottom",
      positionFixed: !1,
      eventsEnabled: !0,
      removeOnDestroy: !1,
      onCreate: function() {},
      onUpdate: function() {},
      modifiers: {
          shift: {
              order: 100,
              enabled: !0,
              fn: function(t) {
              }
          },
          offset: {
              order: 200,
              enabled: !0,
              fn: function(t, e) {
              },
              offset: 0
          },
          preventOverflow: {
              order: 300,
              enabled: !0,
              fn: function(t, e) {
              },
              priority: ["left", "right", "top", "bottom"],
              padding: 5,
              boundariesElement: "scrollParent"
          },
          keepTogether: {
              order: 400,
              enabled: !0,
              fn: function(t) {
              }
          },
          arrow: {
              order: 500,
              enabled: !0,
              fn: function(t, e) {
              },
              element: "[x-arrow]"
          },
          flip: {
              order: 600,
              enabled: !0,
              fn: function(t, e) {
              },
              behavior: "flip",
              padding: 5,
              boundariesElement: "viewport",
              flipVariations: !1,
              flipVariationsByContent: !1
          },
          inner: {
              order: 700,
              enabled: !1,
              fn: function(t) {
              }
          },
          hide: {
              order: 800,
              enabled: !0,
              fn: function(t) {
              }
          },
          computeStyle: {
              order: 850,
              enabled: !0,
              fn: function(t, e) {
              },
              gpuAcceleration: !0,
              x: "bottom",
              y: "right"
          },
          applyStyle: {
              order: 900,
              enabled: !0,
              fn: function(t) {
              },
              onLoad: function(t, e, n, i, o) {
              },
              gpuAcceleration: void 0
          }
      }
  }
    , At = function() {
      function t(e, n) {
      }
      return Y(t, [{
          key: "update",
          value: function() {
          }
      }, {
          key: "destroy",
          value: function() {
          }
      }, {
          key: "enableEventListeners",
          value: function() {
          }
      }, {
          key: "disableEventListeners",
          value: function() {
          }
      }]),
      t
  }();
  At.Utils = ("undefined" != typeof window ? window : global).PopperUtils,
  At.placements = Et,
  At.Defaults = Ot;
  var It = "dropdown"
    , xt = e.fn[It]
    , jt = new RegExp("38|40|27")
    , Lt = {
      offset: 0,
      flip: !0,
      boundary: "scrollParent",
      reference: "toggle",
      display: "dynamic",
      popperConfig: null
  }
    , Pt = {
      offset: "(number|string|function)",
      flip: "boolean",
      boundary: "(string|element)",
      reference: "(string|element)",
      display: "string",
      popperConfig: "(null|object)"
  }
    , Ft = function() {
      function t(t, e) {
      }
      var n = t.prototype;
      return n.toggle = function() {
      }
      ,
      n.show = function(n) {
      }
      ,
      n.hide = function() {
      }
      ,
      n.dispose = function() {
      }
      ,
      n.update = function() {
      }
      ,
      n._addEventListeners = function() {
      }
      ,
      n._getConfig = function(t) {
      }
      ,
      n._getMenuElement = function() {
      }
      ,
      n._getPlacement = function() {
      }
      ,
      n._detectNavbar = function() {
      }
      ,
      n._getOffset = function() {
      }
      ,
      n._getPopperConfig = function() {
      }
      ,
      t._jQueryInterface = function(n) {
      }
      ,
      t._clearMenus = function(n) {
          if (!n || 3 !== n.which && ("keyup" !== n.type || 9 === n.which))
              for (var i = [].slice.call(document.querySelectorAll('[data-toggle="dropdown"]')), o = 0, r = i.length; o < r; o++) {
                  var s = t._getParentFromElement(i[o])
                    , a = e(i[o]).data("bs.dropdown")
                    , l = {
                      relatedTarget: i[o]
                  };
                  if (n && "click" === n.type && (l.clickEvent = n),
                  a) {
                      var c = a._menu;
                      if (e(s).hasClass("show") && !(n && ("click" === n.type && /input|textarea/i.test(n.target.tagName) || "keyup" === n.type && 9 === n.which) && e.contains(s, n.target))) {
                          var u = e.Event("hide.bs.dropdown", l);
                          e(s).trigger(u),
                          u.isDefaultPrevented() || ("ontouchstart"in document.documentElement && e(document.body).children().off("mouseover", null, e.noop),
                          i[o].setAttribute("aria-expanded", "false"),
                          a._popper && a._popper.destroy(),
                          e(c).removeClass("show"),
                          e(s).removeClass("show").trigger(e.Event("hidden.bs.dropdown", l)))
                      }
                  }
              }
      }
      ,
      t._getParentFromElement = function(t) {
      }
      ,
      t._dataApiKeydownHandler = function(n) {
      }
      ,
      i(t, null, [{
          key: "VERSION",
          get: function() {
          }
      }, {
          key: "Default",
          get: function() {
          }
      }, {
          key: "DefaultType",
          get: function() {
          }
      }]),
      t
  }();
  e(document).on("keydown.bs.dropdown.data-api", '[data-toggle="dropdown"]', Ft._dataApiKeydownHandler).on("keydown.bs.dropdown.data-api", ".dropdown-menu", Ft._dataApiKeydownHandler).on("click.bs.dropdown.data-api keyup.bs.dropdown.data-api", Ft._clearMenus).on("click.bs.dropdown.data-api", '[data-toggle="dropdown"]', (function(t) {
  }
  )).on("click.bs.dropdown.data-api", ".dropdown form", (function(t) {
  }
  )),
  e.fn[It] = Ft._jQueryInterface,
  e.fn[It].Constructor = Ft,
  e.fn[It].noConflict = function() {
  }
  ;
  var Rt = e.fn.modal
    , Mt = {
      backdrop: !0,
      keyboard: !0,
      focus: !0,
      show: !0
  }
    , Bt = {
      backdrop: "(boolean|string)",
      keyboard: "boolean",
      focus: "boolean",
      show: "boolean"
  }
    , qt = function() {
      function t(t, e) {
      }
      var n = t.prototype;
      return n.toggle = function(t) {
      }
      ,
      n.show = function(t) {
      }
      ,
      n.hide = function(t) {
      }
      ,
      n.dispose = function() {
      }
      ,
      n.handleUpdate = function() {
      }
      ,
      n._getConfig = function(t) {
      }
      ,
      n._triggerBackdropTransition = function() {
      }
      ,
      n._showElement = function(t) {
      }
      ,
      n._enforceFocus = function() {
      }
      ,
      n._setEscapeEvent = function() {
      }
      ,
      n._setResizeEvent = function() {
      }
      ,
      n._hideModal = function() {
      }
      ,
      n._removeBackdrop = function() {
      }
      ,
      n._showBackdrop = function(t) {
      }
      ,
      n._adjustDialog = function() {
      }
      ,
      n._resetAdjustments = function() {
      }
      ,
      n._checkScrollbar = function() {
      }
      ,
      n._setScrollbar = function() {
      }
      ,
      n._resetScrollbar = function() {
      }
      ,
      n._getScrollbarWidth = function() {
      }
      ,
      t._jQueryInterface = function(n, i) {
      }
      ,
      i(t, null, [{
          key: "VERSION",
          get: function() {
          }
      }, {
          key: "Default",
          get: function() {
          }
      }]),
      t
  }();
  e(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', (function(t) {
  }
  )),
  e.fn.modal = qt._jQueryInterface,
  e.fn.modal.Constructor = qt,
  e.fn.modal.noConflict = function() {
  }
  ;
  var Ht = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"]
    , Qt = {
      "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
      a: ["target", "href", "title", "rel"],
      area: [],
      b: [],
      br: [],
      col: [],
      code: [],
      div: [],
      em: [],
      hr: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: [],
      i: [],
      img: ["src", "srcset", "alt", "title", "width", "height"],
      li: [],
      ol: [],
      p: [],
      pre: [],
      s: [],
      small: [],
      span: [],
      sub: [],
      sup: [],
      strong: [],
      u: [],
      ul: []
  }
    , Wt = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi
    , Ut = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;
  function Vt(t, e, n) {
  }
  var Yt = "tooltip"
    , zt = e.fn[Yt]
    , Xt = new RegExp("(^|\\s)bs-tooltip\\S+","g")
    , Kt = ["sanitize", "whiteList", "sanitizeFn"]
    , Gt = {
      animation: "boolean",
      template: "string",
      title: "(string|element|function)",
      trigger: "string",
      delay: "(number|object)",
      html: "boolean",
      selector: "(string|boolean)",
      placement: "(string|function)",
      offset: "(number|string|function)",
      container: "(string|element|boolean)",
      fallbackPlacement: "(string|array)",
      boundary: "(string|element)",
      sanitize: "boolean",
      sanitizeFn: "(null|function)",
      whiteList: "object",
      popperConfig: "(null|object)"
  }
    , $t = {
      AUTO: "auto",
      TOP: "top",
      RIGHT: "right",
      BOTTOM: "bottom",
      LEFT: "left"
  }
    , Jt = {
      animation: !0,
      template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',
      trigger: "hover focus",
      title: "",
      delay: 0,
      html: !1,
      selector: !1,
      placement: "top",
      offset: 0,
      container: !1,
      fallbackPlacement: "flip",
      boundary: "scrollParent",
      sanitize: !0,
      sanitizeFn: null,
      whiteList: Qt,
      popperConfig: null
  }
    , Zt = {
      HIDE: "hide.bs.tooltip",
      HIDDEN: "hidden.bs.tooltip",
      SHOW: "show.bs.tooltip",
      SHOWN: "shown.bs.tooltip",
      INSERTED: "inserted.bs.tooltip",
      CLICK: "click.bs.tooltip",
      FOCUSIN: "focusin.bs.tooltip",
      FOCUSOUT: "focusout.bs.tooltip",
      MOUSEENTER: "mouseenter.bs.tooltip",
      MOUSELEAVE: "mouseleave.bs.tooltip"
  }
    , te = function() {
      function t(t, e) {
      }
      var n = t.prototype;
      return n.enable = function() {
      }
      ,
      n.disable = function() {
      }
      ,
      n.toggleEnabled = function() {
      }
      ,
      n.toggle = function(t) {
      }
      ,
      n.dispose = function() {
      }
      ,
      n.show = function() {
      }
      ,
      n.hide = function(t) {
      }
      ,
      n.update = function() {
      }
      ,
      n.isWithContent = function() {
      }
      ,
      n.addAttachmentClass = function(t) {
      }
      ,
      n.getTipElement = function() {
      }
      ,
      n.setContent = function() {
      }
      ,
      n.setElementContent = function(t, n) {
      }
      ,
      n.getTitle = function() {
      }
      ,
      n._getPopperConfig = function(t) {
      }
      ,
      n._getOffset = function() {
      }
      ,
      n._getContainer = function() {
      }
      ,
      n._getAttachment = function(t) {
      }
      ,
      n._setListeners = function() {
      }
      ,
      n._fixTitle = function() {
      }
      ,
      n._enter = function(t, n) {
      }
      ,
      n._leave = function(t, n) {
      }
      ,
      n._isWithActiveTrigger = function() {
      }
      ,
      n._getConfig = function(t) {
      }
      ,
      n._getDelegateConfig = function() {
      }
      ,
      n._cleanTipClass = function() {
      }
      ,
      n._handlePopperPlacementChange = function(t) {
      }
      ,
      n._fixTransition = function() {
      }
      ,
      t._jQueryInterface = function(n) {
      }
      ,
      i(t, null, [{
          key: "VERSION",
          get: function() {
          }
      }, {
          key: "Default",
          get: function() {
              return Jt
          }
      }, {
          key: "NAME",
          get: function() {
          }
      }, {
          key: "DATA_KEY",
          get: function() {
          }
      }, {
          key: "Event",
          get: function() {
          }
      }, {
          key: "EVENT_KEY",
          get: function() {
          }
      }, {
          key: "DefaultType",
          get: function() {
              return Gt
          }
      }]),
      t
  }();
  e.fn[Yt] = te._jQueryInterface,
  e.fn[Yt].Constructor = te,
  e.fn[Yt].noConflict = function() {
  }
  ;
  var ee = "popover"
    , ne = e.fn[ee]
    , ie = new RegExp("(^|\\s)bs-popover\\S+","g")
    , oe = s(s({}, te.Default), {}, {
      placement: "right",
      trigger: "click",
      content: "",
      template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'
  })
    , re = s(s({}, te.DefaultType), {}, {
      content: "(string|element|function)"
  })
    , se = {
      HIDE: "hide.bs.popover",
      HIDDEN: "hidden.bs.popover",
      SHOW: "show.bs.popover",
      SHOWN: "shown.bs.popover",
      INSERTED: "inserted.bs.popover",
      CLICK: "click.bs.popover",
      FOCUSIN: "focusin.bs.popover",
      FOCUSOUT: "focusout.bs.popover",
      MOUSEENTER: "mouseenter.bs.popover",
      MOUSELEAVE: "mouseleave.bs.popover"
  }
    , ae = function(t) {
      var n, o;
      function r() {
      }
      o = t,
      (n = r).prototype = Object.create(o.prototype),
      n.prototype.constructor = n,
      n.__proto__ = o;
      var s = r.prototype;
      return s.isWithContent = function() {
      }
      ,
      s.addAttachmentClass = function(t) {
      }
      ,
      s.getTipElement = function() {
      }
      ,
      s.setContent = function() {
      }
      ,
      s._getContent = function() {
      }
      ,
      s._cleanTipClass = function() {
      }
      ,
      r._jQueryInterface = function(t) {
      }
      ,
      i(r, null, [{
          key: "VERSION",
          get: function() {
          }
      }, {
          key: "Default",
          get: function() {
          }
      }, {
          key: "NAME",
          get: function() {
          }
      }, {
          key: "DATA_KEY",
          get: function() {
          }
      }, {
          key: "Event",
          get: function() {
          }
      }, {
          key: "EVENT_KEY",
          get: function() {
          }
      }, {
          key: "DefaultType",
          get: function() {
          }
      }]),
      r
  }(te);
  e.fn[ee] = ae._jQueryInterface,
  e.fn[ee].Constructor = ae,
  e.fn[ee].noConflict = function() {
  }
  ;
  var le = "scrollspy"
    , ce = e.fn[le]
    , ue = {
      offset: 10,
      method: "auto",
      target: ""
  }
    , he = {
      offset: "number",
      method: "string",
      target: "(string|element)"
  }
    , fe = function() {
      function t(t, n) {
      }
      var n = t.prototype;
      return n.refresh = function() {
      }
      ,
      n.dispose = function() {
      }
      ,
      n._getConfig = function(t) {
      }
      ,
      n._getScrollTop = function() {
      }
      ,
      n._getScrollHeight = function() {
      }
      ,
      n._getOffsetHeight = function() {
      }
      ,
      n._process = function() {
      }
      ,
      n._activate = function(t) {
      }
      ,
      n._clear = function() {
      }
      ,
      t._jQueryInterface = function(n) {
      }
      ,
      i(t, null, [{
          key: "VERSION",
          get: function() {
          }
      }, {
          key: "Default",
          get: function() {
          }
      }]),
      t
  }();
  e(window).on("load.bs.scrollspy.data-api", (function() {
      for (var t = [].slice.call(document.querySelectorAll('[data-spy="scroll"]')), n = t.length; n--; ) {
          var i = e(t[n]);
          fe._jQueryInterface.call(i, i.data())
      }
  }
  )),
  e.fn[le] = fe._jQueryInterface,
  e.fn[le].Constructor = fe,
  e.fn[le].noConflict = function() {
  }
  ;
  var de = e.fn.tab
    , pe = function() {
      function t(t) {
      }
      var n = t.prototype;
      return n.show = function() {
      }
      ,
      n.dispose = function() {
      }
      ,
      n._activate = function(t, n, i) {
      }
      ,
      n._transitionComplete = function(t, n, i) {
      }
      ,
      t._jQueryInterface = function(n) {
      }
      ,
      i(t, null, [{
          key: "VERSION",
          get: function() {
          }
      }]),
      t
  }();
  e(document).on("click.bs.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]', (function(t) {
  }
  )),
  e.fn.tab = pe._jQueryInterface,
  e.fn.tab.Constructor = pe,
  e.fn.tab.noConflict = function() {
  }
  ;
  var me = e.fn.toast
    , ge = {
      animation: "boolean",
      autohide: "boolean",
      delay: "number"
  }
    , ve = {
      animation: !0,
      autohide: !0,
      delay: 500
  }
    , _e = function() {
      function t(t, e) {
      }
      var n = t.prototype;
      return n.show = function() {
      }
      ,
      n.hide = function() {
      }
      ,
      n.dispose = function() {
      }
      ,
      n._getConfig = function(t) {
      }
      ,
      n._setListeners = function() {
      }
      ,
      n._close = function() {
      }
      ,
      t._jQueryInterface = function(n) {
      }
      ,
      i(t, null, [{
          key: "VERSION",
          get: function() {
          }
      }, {
          key: "DefaultType",
          get: function() {
          }
      }, {
          key: "Default",
          get: function() {
          }
      }]),
      t
  }();
  e.fn.toast = _e._jQueryInterface,
  e.fn.toast.Constructor = _e,
  e.fn.toast.noConflict = function() {
  }
  ,
  t.Alert = h,
  t.Button = d,
  t.Carousel = y,
  t.Collapse = S,
  t.Dropdown = Ft,
  t.Modal = qt,
  t.Popover = ae,
  t.Scrollspy = fe,
  t.Tab = pe,
  t.Toast = _e,
  t.Tooltip = te,
  t.Util = l,
  Object.defineProperty(t, "__esModule", {
      value: !0
  })
}
));
//# sourceMappingURL=bootstrap.bundle.min.js.map
